$date
	Sun Mar 31 01:27:54 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module I2C_master1_tb $end
$var parameter 32 ! CLK_PERIOD $end
$var reg 1 " SDA_in $end
$var reg 1 # clk $end
$var reg 8 $ data_in [7:0] $end
$var reg 1 % enable $end
$var reg 8 & ext_reg_addr [7:0] $end
$var reg 7 ' ext_slave_addr [6:0] $end
$var reg 1 ( read_write $end
$var reg 1 ) reset $end
$scope module u_I2C_master1 $end
$var wire 1 " SDA_in $end
$var wire 1 * add_Ack $end
$var wire 1 # clk $end
$var wire 8 + data_in [7:0] $end
$var wire 1 % enable $end
$var wire 8 , ext_reg_addr [7:0] $end
$var wire 7 - ext_slave_addr [6:0] $end
$var wire 1 ( read_write $end
$var wire 1 ) reset $end
$var parameter 3 . ADDRESS $end
$var parameter 3 / ADD_ACK_NACK $end
$var parameter 3 0 IDLE $end
$var parameter 3 1 START $end
$var parameter 3 2 STOP $end
$var parameter 3 3 r_w $end
$var parameter 3 4 reg_ACK_NACK $end
$var parameter 3 5 slave_reg $end
$var reg 1 6 SDA_out $end
$var reg 3 7 addcounter [2:0] $end
$var reg 3 8 nextstate [2:0] $end
$var reg 3 9 reg_add_counter [2:0] $end
$var reg 1 : scl $end
$var reg 1 ; scl_counter $end
$var reg 7 < shiftreg [6:0] $end
$var reg 7 = shiftreg1 [6:0] $end
$var reg 3 > state [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 5
b110 4
b11 3
b111 2
b1 1
b0 0
b100 /
b10 .
b1010 !
$end
#0
$dumpvars
b0 >
bx =
bx <
0;
1:
bx 9
b1 8
b0 7
16
b0 -
b0 ,
b0 +
z*
1)
0(
b0 '
b0 &
1%
b0 $
1#
0"
$end
#5
1;
0#
#10
06
b10 8
b0 =
b0 <
b1 >
1#
0)
#15
0:
0;
0#
#20
x6
b10 >
1#
#25
b1 7
1;
0#
#30
1#
#35
0;
0#
#40
1#
#45
b10 7
1;
0#
#50
1#
#55
0;
0#
#60
1#
#65
b11 7
1;
0#
#70
1#
#75
0;
0#
#80
1#
#85
b100 7
1;
0#
#90
1#
#95
0;
0#
#100
1#
#105
b101 7
1;
0#
#110
1#
#115
0;
0#
#120
1#
#125
b110 7
1;
0#
#130
1#
#135
0;
0#
#140
1#
#145
b11 8
b0 7
1;
0#
#150
b100 8
b11 >
1#
#155
0;
0#
#160
b100 >
1#
#165
1;
0#
#170
1#
#175
0;
0#
#180
1#
#185
1;
0#
#190
1#
#195
0;
0#
#200
1#
#205
1;
0#
#210
1#
